QUESTION 4:

SELECT TRIP_NAME
FROM jrodr113.TRIP
WHERE TYPE = 'Hiking' AND DISTANCE > 10

OUTPUT:
TRIP_NAME                                                                  
---------------------------------------------------------------------------
Crawford Path Presidentials Hike    

QUESTION 5:

SELECT CUSTOMER_NUM, LAST_NAME, FIRST_NAME
FROM jrodr113.CUSTOMER
WHERE STATE IN ('NJ', 'NY', 'PA');


OUTPUT:
CUST LAST_NAME                      FIRST_NAME                    
---- ------------------------------ ------------------------------
105  Mclean                         Kyle                          
108  Rulf                           Uschi                         
110  Bers                           Martha                        
115  Vaccari                        Adam                          
125  Peterson                       Becca     

QUESTION 8:

SELECT STATE, COUNT(*)
FROM jrodr113.TRIP
GROUP BY STATE

OUTPUT:
ST   COUNT(*)
-- ----------
CT          2
MA          4
NH         19
ME         12
VT          4

QUESTION 9:

SELECT *
FROM jrodr113.RESERVATION 
WHERE TRIP_PRICE > 20.00 AND TRIP_PRICE < 75.00

RESERVA    TRIP_ID TRIP_DATE NUM_PERSONS TRIP_PRICE OTHER_FEES CUST
------- ---------- --------- ----------- ---------- ---------- ----
1600001         40 26-MAR-16           2         55          0 101 
1600003         28 12-SEP-16           1         35          0 103 
1600004         26 16-OCT-16           4         45         15 104 
1600005         39 25-JUN-16           5         55          0 105 
1600008         28 12-SEP-16           2         35          0 108 
1600010          2 14-MAY-16           3         25          0 102 
1600011          3 15-SEP-16           3         25          0 102 
1600014         12 01-OCT-16           2         40          5 119 
1600019         25 29-AUG-16           2         30         10 124 
1600024         38 11-SEP-16           1         70         30 121 
1600025         38 11-SEP-16           2         70         45 125 

RESERVA    TRIP_ID TRIP_DATE NUM_PERSONS TRIP_PRICE OTHER_FEES CUST
------- ---------- --------- ----------- ---------- ---------- ----
1600026         12 01-OCT-16           2         40          0 126 
1600030         15 25-JUL-16           6         60         15 104 

13 rows selected. 

QUESION 14:

SELECT AVG(DISTANCE) AS AVERAGE_DISTANCE, AVG(MAX_GRP_SIZE) AS AVERAGE_MAX_GROUP_SIZE
FROM jrodr113.TRIP

OUTPUT:
AVERAGE_DISTANCE AVERAGE_MAX_GROUP_SIZE
---------------- ----------------------
      9.90243902             10.4878049

QUESTION 15:

SELECT DISTINCT SEASON
FROM jrodr113.TRIP

OUTPUT:
SEASON              
--------------------
Late Spring         
Late Pall           
Summer              
Spring              
Early Spring        
Early Fall          

6 rows selected. 

QUESTION 16:

SELECT RESERVATION_ID
FROM jrodr113.RESERVATION
WHERE TRIP_ID IN (
  SELECT TRIP_ID
  FROM TRIP
  WHERE TYPE = 'Paddling'
);

OUTPUT:
RESERVA
-------
1600006
1600007
1600016
1600021

QUESTION 18:

SELECT TRIP_ID, SUM(TRIP_PRICE) AS TOTAL_PRICE
FROM jrodr113.RESERVATION
GROUP BY TRIP_ID
HAVING COUNT(*) > 1;

OUTPUT:
   TRIP_ID TOTAL_PRICE
---------- -----------
        21         190
        12          80
        28          70
        38         315
        39          75
        32         170
        25         140

7 rows selected. 

QUESTION 19:

SELECT COUNT(*) AS RESERVATION_ID, SUM(NUM_PERSONS) AS NUM_OF_PEOPLE
FROM jrodr113.RESERVATION;

OUTPUT:
RESERVATION_ID NUM_OF_PEOPLE
-------------- -------------
            27            77

QUESTION 20:

SELECT RESERVATION_ID, TRIP_ID
FROM jrodr113.RESERVATION
WHERE TRIP_ID IN (
  SELECT TRIP_ID
  FROM TRIP
  WHERE TRIP_DATE BETWEEN TO_DATE('01-JUL-16', 'DD-MON-YY') AND TO_DATE('31-JUL-16', 'DD-MON-YY')
);

OR

SELECT RESERVATION.RESERVATION_ID, TRIP.TRIP_ID
FROM jrodr113.RESERVATION
JOIN TRIP ON RESERVATION.TRIP_ID = TRIP.TRIP_ID
WHERE RESERVATION.TRIP_DATE >= TO_DATE('01-JUL-16', 'DD-MON-YY')
AND RESERVATION.TRIP_DATE <= TO_DATE('31-JUL-16', 'DD-MON-YY');

OUTPUT:
RESERVA    TRIP_ID
------- ----------
1600007         22
1600013          8
1600015         10
1600016         11
1600030         15